!function ($) {
    "use strict";
    var Clients = function () {
        },
        $self,
        $plugins;

    Clients.prototype.initAjax = function () {
        var formAjax = $('.form-ajax');
        formAjax.on('submit', function (e) {
            e.preventDefault();
            var url       = $(this).attr('action'),
                serialize = $(this).serialize(),
                formGroup = $(this).find('.form-group');

            formGroup.removeClass('has-error');
            formGroup.find('.text-danger').empty();

            $plugins.waitMe('load', '.right-contet', 'stretch');

            $.post({
                       url: url,
                       headers: {'X-CSRF-TOKEN': $self.token},
                       method: 'POST',
                   }, serialize, function (data) {

                if(data.auth){
                    location.href = data.intended;
                }else{
                    $plugins.waitMe('hide', '.right-contet');
                }

            }).fail(function (data, status, error) {

                $plugins.waitMe('hide', '.right-contet');

                var responde = data.responseJSON;
                $.each(responde.errors, function (index, val) {
                    var form = formGroup.filter('[data-form="' + index + '"]');
                    form.addClass('has-error');
                    form.find('.text-danger').text(val[0]);
                });
            });

        });

    }

    Clients.prototype.init = function () {

        $self      = this;
        $plugins   = $.Plugins;
        this.token = $('meta[name="csrf-token"]').attr('content');

        this.initAjax();
    }

    //init
    $.Clients = new Clients, $.Clients.Constructor = Clients
}(window.jQuery),

    //initializing
    function ($) {
        "use strict";
        $.Clients.init();
    }(window.jQuery);




!function ($) {
    "use strict";
    var Magazine = function () {
        },
        $self;

    Magazine.prototype.initMagazine = function () {
        $('.manager-magazine').on('click', function (e) {
            e.preventDefault();
            var $this = $(this);
            $this.magazine(
                {
                    data: $this.data(),
                    headers: {'X-CSRF-TOKEN': $self.token},
                    url: 'magazine/show',
                    urlPremium: 'magazine/premium',
                });
        });
    }

    Magazine.prototype.init = function () {
        $self = this;
        this.token = $('meta[name="csrf-token"]').attr('content');
        this.initMagazine();
    }

    //init
    $.Magazine = new Magazine, $.Magazine.Constructor = Magazine
}(window.jQuery),

    //initializing
    function ($) {
        "use strict";
        $.Magazine.init();
    }(window.jQuery);

!function ($) {
    "use strict";
    var Publishers = function () {
        },
        $self;

    Publishers.prototype.initAds = function () {

        var adsHtml = $('.ads'),
            adsJson = {},
            count   = {wide: 0, box: 0};

        $self.showAds(function (data) {

            adsJson.wide = data['wide'];
            adsJson.box  = data['box'];

            $.each(adsHtml, function (index, val) {

                if (adsJson.wide.length) {
                    if ($(this).data('ads') == 'wide') {
                        $self.setHtmlAds($(this), adsJson.wide[count.wide]);
                        count.wide++;
                    }
                }

                if (adsJson.box.length) {
                    if ($(this).data('ads') == 'box') {
                        $self.setHtmlAds($(this), adsJson.box[count.box]);
                        count.box++;
                    }
                }
            });
        });
    }

    Publishers.prototype.setHtmlAds = function (ads, item) {

        if (item.image != null) {
            ads.html('<img src="' + item.image + '" title="' + item.title + '">');
            if (item.url != null) {
                ads.wrap('<a href="' + item.url + '" target="_blank"></a>');
            }
        }

    }

    Publishers.prototype.showAds = function (callback) {
        $.post({
                   url: web.urlPublishers,
                   headers: {'X-CSRF-TOKEN': web.token}
               }, function (data) {
            callback(data);
        });
    }

    Publishers.prototype.init = function () {
        $self = this;

        this.initAds();

    }

    //init
    $.Publishers = new Publishers, $.Publishers.Constructor = Publishers
}(window.jQuery),

    //initializing
    function ($) {
        "use strict";
        $.Publishers.init();
    }(window.jQuery);
