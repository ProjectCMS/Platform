!function ($) {
    "use strict";

    var Functions = function () {
        },
        $self;

    Functions.prototype.nl2br = function (value) {
        if (value) {
            value = value.trim();
            return value.replace(/(\r\n|\n\r|\r|\n)/g, "<p>");
        }
    }

    Functions.prototype.br2nl = function (value) {
        if (value) {
            value = value.trim();
            return value.replace(/<br>/g, "\r");
        }
    }

    Functions.prototype.limitText = function ($self, limit) {
        var txt = $self.find('p').text();

        if (txt.length > limit) {
            var $new = $self.find('p').text(txt.substring(0, limit) + ' [...]');
        }
    }

    Functions.prototype.init = function () {

        $self = this;

    }

    //init
    $.Functions = new Functions, $.Functions.Constructor = Functions;
}(window.jQuery),

    //initializing
    function ($) {
        "use strict";
        $.Functions.init();
    }(window.jQuery);
!function ($) {
    "use strict";

    var App = function () {
        },
        $self;

    App.prototype.initLoader = function () {
        $(window).on('load', function () {
            $self.loader.fadeOut();
        });
    }

    App.prototype.initHeader = function () {
        $self.navContent.css('min-height', $self.navBar.innerHeight());

        $(window).on('scroll resize', function () {
            if ($(window).scrollTop() > ($self.navBar.innerHeight())) {
                $self.header.addClass('fixed');
            } else {
                $self.header.removeClass('fixed');
            }
            $self.navContent.css('min-height', $self.navBar.innerHeight());
        });

    }

    App.prototype.initNavBar = function () {
        $self.navBar.filter('#nav-top').find('.navbar-nav > li.dropdown').slice(-1).addClass('last-elements');
    }

    App.prototype.initSideBar = function () {
        $('.sidebar-collapse').on('click', function (e) {
            e.preventDefault();

            $self.sidebar.addClass('active');
            $self.overlay.fadeIn();

            $('.collapse.in').toggleClass('in');
            $('a[aria-expanded=true]').attr('aria-expanded', 'false');

        });

        $('.dismiss, .overlay').on('click', function () {
            $self.sidebar.removeClass('active');
            $self.overlay.fadeOut();

        });

        $(".sidebar-menu .content").mCustomScrollbar(
            {
                theme: "minimal-dark"
            });
    }

    App.prototype.init = function () {

        $self = this;

        this.loader     = $('.loader-content');
        this.header     = $('.header');
        this.navContent = $('.nav-content');
        this.navBar     = $('.navbar');
        this.sidebar    = $('.sidebar-menu');
        this.overlay    = $('.overlay');

        this.initLoader();
        this.initHeader();
        this.initNavBar();
        this.initSideBar();

    }

    //init
    $.App = new App, $.App.Constructor = App;
}(window.jQuery),

    //initializing
    function ($) {
        "use strict";
        $.App.init();
    }(window.jQuery);
!function ($) {
    "use strict";

    var Pages = function () {
        },
        $self,
        $app,
        $functions;

    Pages.prototype.initPages = function () {

        $self.pageText.html($functions.br2nl($self.pageText.html()));
        $self.pageText.html($functions.nl2br($self.pageText.html()));

        $self.pageText.find('p').filter(function () {
            return $.trim($(this).html()) == '';
        }).remove();

        $self.pageText.find('img').on('error', function () {
            $(this).remove();
        });

    }

    Pages.prototype.initTimeline = function () {

        var separator = 3,
            timeline  = $('.timeline');

        var timeline_item = $(".timeline .item");

        for (var x = 0; x < timeline_item.length; x += separator) {
            timeline_item.slice(x, x + separator).wrapAll('<div class="group"></div>');
        }

        var group = timeline.find('.group');

        for (var i = 0; i < group.length; i++) {

            var g = group.eq(i);

            if (i == 0) {
                g.append('<div class="box-time"></div>');
            }

            if (i === group.length - 1) {
                g.append('<div class="box-time"></div>');
            }

            if (g.find('.item').length == separator && i !== group.length - 1) {

                if ((i % 2) == 0) {
                    g.attr('data-separator', 'right');
                } else {
                    g.attr('data-separator', 'left');
                }
            }

            if ((i % 2) == 0) {
                g.attr('data-align', 'left');
            } else {
                g.attr('data-align', 'right');
            }
        }

        var timeline_item = timeline.find('.item'),
            timeline_box  = timeline.find('.box-time');

        timeline_box.eq(0).css('borderColor', timeline_item.eq(0).css('backgroundColor'));
        if(timeline_box.length >= 2) {
            timeline_box.eq(1).css('borderColor', timeline_item.last().css('backgroundColor'));
        }
    }

    Pages.prototype.initLogin = function () {
        var modalLogin    = $('.modal-login'),
            leftContent   = modalLogin.find('.left-content'),
            modalLoginTab = leftContent.find('.modal-login-tab');

        modalLoginTab.on('click', function (e) {
            e.preventDefault();

            var tab = $(this).data('tab');
            leftContent.attr('data-tab', tab);

        });

        modalLogin.on('show.bs.modal', function (event) {
            var button    = $(event.relatedTarget),
                recipient = button.data('event'),
                modal     = $(this);

            leftContent.attr('data-tab', recipient);
        });
    }

    Pages.prototype.init = function () {

        $self      = this;
        $app       = $.App;
        $functions = $.Functions;

        this.pageText = $(".page-text");

        this.initPages();
        this.initTimeline();
        this.initLogin();

    }

    //init
    $.Pages = new Pages, $.Pages.Constructor = Pages;
}(window.jQuery),

    //initializing
    function ($) {
        "use strict";
        $.Pages.init();
    }(window.jQuery);
!function ($) {
    "use strict";

    var Plugins = function () {
        },
        $self;

    Plugins.prototype.initChat = function () {
        (function () { // DON'T EDIT BELOW THIS LINE
            var d = document, s = d.createElement('script');
            s.src = 'https://revistamamaebebe.disqus.com/embed.js';
            s.setAttribute('data-timestamp', +new Date());
            (d.head || d.body).appendChild(s);
        })();
    }

    Plugins.prototype.initCarousel = function () {
        var carouselPosts = $('.carousel-posts');

        carouselPosts.owlCarousel(
            {
                items: 1,
                loop: true,
                dots: false,
                nav: true,
                autoHeight: true,
                animateOut: 'fadeOut',
                animateIn: 'fadeIn',
            });
    }

    Plugins.prototype.initMagazine = function () {

        $('.manager-magazine').on('click', function (e) {
            e.preventDefault();
            var $this = $(this);
            $this.magazine(
                {
                    data: $this.data(),
                    url: 'http://mamaebebe.l.com/magazine/show',
                    method: 'get',
                    urlPremium: 'premium.html',
                });
        });

    }

    Plugins.prototype.waitMe = function (type, element, effect) {
        if (type == 'load') {
            $(element).waitMe(
                {
                    effect: effect,

                });
        }
        if (type == 'hide') {
            $(element).waitMe("hide");
        }
    }

    Plugins.prototype.initModal = function () {
        $(document).on(
            {
                'show.bs.modal': function () {
                    var zIndex = 1040 + (10 * $('.modal:visible').length);
                    $(this).css('z-index', zIndex);
                    setTimeout(function () {
                        $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');
                    }, 0);
                },
                'hidden.bs.modal': function () {
                    if ($('.modal:visible').length > 0) {
                        setTimeout(function () {
                            $(document.body).addClass('modal-open');
                        }, 0);
                    }
                }
            }, '.modal');
    }

    Plugins.prototype.init = function () {

        $self = this;

        // this.initChat();
        this.initCarousel();
        // this.initMagazine();
        this.initModal();
        console.log("teste");

    }


    //init
    $.Plugins = new Plugins, $.Plugins.Constructor = Plugins;
}(window.jQuery),

    //initializing
    function ($) {
        "use strict";
        $.Plugins.init();
    }(window.jQuery);
!function ($) {
    "use strict";

    var Posts = function () {
        },
        $self,
        $app,
        $functions;

    Posts.prototype.initPosts = function () {
        $self.posts.filter('#main').find('article:eq(0)').addClass('col-lg-8 col-md-6');
        $self.posts.filter('#main').find('article:eq(1), article:eq(2), article:eq(3)').addClass('col-lg-4 col-md-6').addClass('col-lg-3 col-md-6').each(function () {
            $functions.limitText($(this), 200);
        });
        $self.posts.filter('#main').find('article:eq(4)').addClass('col-lg-9 col-md-6');
        $self.posts.filter('#main').find('article:eq(5), article:eq(6), article:eq(7), article:eq(8), article:eq(9)').addClass('col-lg-3 col-md-6').each(function () {
            $functions.limitText($(this), 85);
        });
        $self.posts.filter('#sub').find('article').addClass('col-lg-6');

        $self.initAds();

    }

    Posts.prototype.initAds = function () {

        // Add Ads
        $self.posts.filter('#main').find('article:eq(0)').after('<div class="ads box" data-ads="box"></div>');
        $self.posts.filter('#main').find('article:eq(3), article:eq(9)').after('<div class="ads wide" data-ads="wide"></div>');

        $self.posts.find('.ads.box').wrap('<div class="col"></div>');
        $self.posts.find('.ads.wide').wrap('<div class="col-lg-12"></div>');

    }


    Posts.prototype.init = function () {

        $self = this;
        $app = $.App;
        $functions = $.Functions;


        this.grid_posts = $(".grid-posts");
        this.posts      = $(".posts");
        this.posts_w    = $(".posts-w");
        this.posts_c    = $(".posts-category");
        this.demo       = false;

        this.initPosts();

    }

    //init
    $.Posts = new Posts, $.Posts.Constructor = Posts;
}(window.jQuery),

    //initializing
    function ($) {
        "use strict";
        $.Posts.init();
    }(window.jQuery);


(function ($) {

    $.fn.magazine = function (options) {

        var base      = this;
        var serialize = {};

        var settings = $.extend(
            {
                complete: function () {
                },
                url: '',
                urlError: '',
                urlPremium: '',
                data: '',
                method: 'post',
                headers: {},
            }, options);

        var $selector = $("body"),
            dataFiles = {};


        this.each(function () {

            modal();

        });

        function modal () {

            $('#modal-magazine').remove();

            $selector.append(
                '<div class="modal fade modal-magazine" id="modal-magazine" tabindex="-1" role="dialog">' +
                '<div class="modal-close" data-dismiss="modal" aria-label="Close"></div>' +
                '<div class="modal-dialog" role="document">' +
                '<div class="modal-content">' +
                '</div>' +
                '</div>' +
                '</div>')

            $('#modal-magazine').modal('show');
            $('#modal-magazine').on('hidden.bs.modal', function (e) {
                $(this).remove();
            });
            $('#modal-magazine').on('shown.bs.modal', function (e) {
                var modal = $(this).find('.modal-content');
                initTurn(modal);
            })

        }

        function initTurn (managerMagazine) {
            managerMagazine.prepend(
                '<div class="magazine-content">' +
                '<div id="flipbook" class="animated flipbook">' +
                // '<div ignore="1" class="buttons next-button"></div>' +
                // '<div ignore="1" class="buttons previous-button"></div>' +
                '</div>' +
                '</div>'
            );

            initPages(managerMagazine);
        }

        function initPages (managerMagazine) {
            var flipbook = managerMagazine.find('.flipbook');
            var limit    = 10;

            flipbook.append('<div class="loader" ignore="1"></div>');

            $.post({
                       url: settings.url,
                       headers: settings.headers,
                       method: settings.method
                   }, settings.data, function (data) {

                flipbook.find('.loader').remove();

                if (data.files) {
                    dataFiles = data.files;
                    $.each(data.files, function (index, val) {
                        var index   = index + 1;
                        var element = $('<div />', {'data-id': index}).html('<div class="load-file"><div class="loader"></div></div>');
                        flipbook.append(element);
                    });
                    initPlugin();
                }
            });

        }

        function loadPage (element, val) {

            if (val.url != null) {

                if (element.find('img').length == 0) {

                    var loadingTask = pdfjsLib.getDocument(val.url);

                    loadingTask.promise.then(function (pdf) {

                        var pageNumber = 1;
                        pdf.getPage(pageNumber).then(function (page) {

                            var viewport  = page.getViewport(1),
                                canvas    = document.createElement('canvas'),
                                context   = canvas.getContext('2d');
                            canvas.height = viewport.height;
                            canvas.width  = viewport.width;

                            // Render PDF page into canvas context
                            var renderContext = {
                                canvasContext: context,
                                viewport: viewport
                            };
                            page.render(renderContext).then(function () {
                                element.append('<img src="' + canvas.toDataURL('image/jpeg', 1.0) + '">');
                                element.find('.load-file').remove();
                            });
                        });
                    }, function (reason) {
                        if (settings.urlError) {
                            element.load(settings.urlError);
                        }
                    });

                }

            } else {
                if (settings.urlPremium) {
                    if(element.find('.premium-content').length == 0) {
                        element.load(settings.urlPremium, function () {
                            element.find('.load-file').remove();
                        });
                    }
                }
            }
        }

        function initPlugin () {
            var flipbook         = $('.flipbook'),
                magazineViewport = $('.magazine-viewport');

            flipbook.turn(
                {
                    width: 1040,
                    height: 736,
                    duration: 1000,
                    autoCenter: true,
                    elevation: 50,
                    acceleration: false,
                    when: {

                        turning: function (e, page, view) {
                            var book        = $(this),
                                currentPage = book.turn('page'),
                                pages       = book.turn('pages');
                            Hash.go('page/' + page).update();
                        },

                        turned: function (e, page, view) {
                            var book = $(this);

                            $.each(view, function (index, val) {
                                if (val != 0) {
                                    var page    = book.find('.page-wrapper[page="' + val + '"] .page'),
                                        element = page.filter('[data-id="' + val + '"]'),
                                        file    = dataFiles[val - 1];
                                    loadPage(element, file);
                                }
                            });
                        }
                    }

                }).turn('page', 2);

            Hash.on('^page\/([0-9]*)$', {
                yep: function (path, parts) {
                    var page = parts[1];

                    if (page !== undefined) {
                        if (flipbook.turn('is'))
                            flipbook.turn('page', page);
                    }

                },
                nop: function (path) {

                    if (flipbook.turn('is'))
                        flipbook.turn('page', 1);
                }
            });
        }

        $('.next-button').on($.mouseEvents.over, function () {
            $(this).addClass('next-button-hover');

        }).on($.mouseEvents.out, function () {

            $(this).removeClass('next-button-hover');

        }).on($.mouseEvents.down, function () {

            $(this).addClass('next-button-down');

        }).on($.mouseEvents.up, function () {

            $(this).removeClass('next-button-down');

        }).on('click', function () {

            $('.flipbook').turn('next');

        });

        $('.previous-button').on($.mouseEvents.over, function () {

            $(this).addClass('previous-button-hover');

        }).on($.mouseEvents.out, function () {

            $(this).removeClass('previous-button-hover');

        }).on($.mouseEvents.down, function () {

            $(this).addClass('previous-button-down');

        }).on($.mouseEvents.up, function () {

            $(this).removeClass('previous-button-down');

        }).on('click', function () {

            $('.flipbook').turn('previous');

        });

        $(document).on('keydown', function (e) {

            var previous = 37, next = 39, esc = 27;

            switch (e.keyCode) {
                case previous:

                    // left arrow
                    $('.flipbook').turn('previous');
                    e.preventDefault();

                    break;
                case next:

                    //right arrow
                    $('.flipbook').turn('next');
                    e.preventDefault();

                    break;
            }
        });


    }

})(jQuery);